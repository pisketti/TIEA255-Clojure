#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass docbook
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Clojure
\end_layout

\begin_layout Date
23.03.2011
\end_layout

\begin_layout Author
\begin_inset Flex Element:Firstname
status collapsed

\begin_layout Plain Layout
Tarmo
\end_layout

\end_inset


\begin_inset Flex Element:Surname
status collapsed

\begin_layout Plain Layout
Aidantausta
\end_layout

\end_inset


\end_layout

\begin_layout Author
\begin_inset Flex Element:Firstname
status collapsed

\begin_layout Plain Layout
Tero
\end_layout

\end_inset


\begin_inset Flex Element:Surname
status collapsed

\begin_layout Plain Layout
Kadenius
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Clojure on puhevika.
\end_layout

\begin_layout Section
Clojure
\end_layout

\begin_layout Subsection
Mik√§ on Clojure?
\end_layout

\begin_layout Itemize
Funktio-ohjelmointi -kieli
\end_layout

\begin_deeper
\begin_layout Itemize
functional vs.
 imperative programming
\end_layout

\end_deeper
\begin_layout Itemize
Lisp
\end_layout

\begin_deeper
\begin_layout Itemize
Dynamically typed
\end_layout

\begin_layout Itemize
Homoiconic
\end_layout

\begin_deeper
\begin_layout Itemize
Code as data.
 Data as code.
\end_layout

\begin_layout Itemize
meta programming.
 Advanced macros.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Immutable data structures
\end_layout

\begin_layout Section
Rinnakkaisuus Clojuressa
\end_layout

\begin_layout Subsection
Reference types
\end_layout

\begin_layout Itemize
atom, agent and ref
\end_layout

\begin_layout Itemize
identity and equality
\end_layout

\begin_layout Subsection
Software transactional memory system (STM)
\end_layout

\begin_layout Itemize
refs require a transaction
\end_layout

\begin_layout Subsection
Example: Java vs.
 Clojure
\end_layout

\end_body
\end_document
